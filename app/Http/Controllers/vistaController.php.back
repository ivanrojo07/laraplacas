<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Session;
use DB;
use Illuminate\Support\Facades\App;

class vistaController extends Controller
{
    protected $fecha;
    protected $hora;

    public function __construct()
    {
    	#Permite verifcar usuarios autenticado
        //$this->middleware('auth');
        $this->fecha = Date('Y-m-d');
        $this->hora = Date('H:i');
    }

    public function index(Request $request){
      return "Hola mensaje de prueba";
    }

    public function dashboard(Request $request){
    	return view('dashboard');
    }

    public function incidentes(Request $request){
        $fecha=$request['fecha'];
        $fechaTexto=$this->obtenerFechaTexto($fecha);
        $incidentesdia=DB::select('SELECT * FROM incidentesHoy(?)',[$fecha]);
        
        $datos=[
            'incidentesdia'=>$incidentesdia,
            'fechaH'=>$this->fecha,
            'fechaTexto'=>$fechaTexto,
            'detalleincidente'=>array(),
            'menu_tabla'=>'activo',
            'menu_informacion'=>'ocultar'
        ];
        return view('incidentes.incidentes',$datos);

        /*
        */

    }

    public function post_incidentes(Request $request){
        $serie=$request['serie'];
        $detalleincidente=DB::select('SELECT * FROM detalleSerie(?)',[$serie]);
        //dd($detalleincidente);
        $fecha=$this->fecha;
        $fechaTexto=$this->obtenerFechaTexto($fecha);
        //$incidentesdia=DB::select('SELECT * FROM incidentesHoy(?)',[$fecha]);
        $datos=[
            'incidentesdia'=>array(),
            'fechaH'=>$this->fecha,
            'fechaTexto'=>$fechaTexto,
            'detalleincidente'=>$detalleincidente,
            'serie'=>$serie,
            'menu_tabla'=>'',
            'menu_informacion'=>'activo'
        ];

        //dd($datos);
        return view('incidentes.incidentes',$datos);
    }

    public function detalleSerie(Request $request){

      //  $serie=$request['data']['serie'];
      //  /*$fecha=$this->fecha;
      //  $fechaTexto=$this->obtenerFechaTexto($fecha);
      //  $id_usr= Auth::user()->id;
      //  $incidentesdia=DB::select('SELECT * FROM incidentesHoy(?)',[$fecha]);
      //  $datos=[
      //      'fechaTexto'=>$fechaTexto,
      //      'id_usr'=>$id_usr,
      //      'incidentesdia'=>$incidentesdia,
      //      'detalleincidente'=>$detalleincidente
      //  ];*/
      //  $detalleincidente=DB::select('SELECT * FROM detalleSerie(?)',[$serie]);
      //  $prefijoedo=$detalleincidente[0]->prefijo_estado;
//
//      //  $edojson=DB::select('SELECT * FROM edo_mpio_loc(?)',[$prefijoedo]);
//      //  $path = 'http://localhost/recursos/'.$prefijoedo.'.json';
//      //  $content = file_get_contents($path);
//
//      //  $datos=[
//      //      'detalleincidente'=>$detalleincidente,
//      //      'prefijo'=>$prefijoedo,
//      //      'edojson'=>$content
//      //  ];
//
//      //  //select * from edo_mpio_loc('agu')
//
//
//      // // return view('incidentes.detalleincidente', $datos);
//      // return $datos;
//
//
    }

    public function actualizarIncidente2(Request $request){

             $incidente = $request;
            /*$incidente2 = $request['nombre_loc'];
            DB::table('descripcion')->insert(['descripcion'=>$incidente]);
            $zonas_afectadas=[
                'nombre_edo'=>$incidente['nombreestado'],
                'nombre_mun'=>$incidente['nombre_mun'],
                'nombre_loc'=>$incidente['nombre_loc']
                            ];*/
            $lat=$request['latitud'];
            $long=$request['longitud'];
            $ubicacion_espe=array('lat' => $lat , 'long' => $long );
            $ubicacionespecifica=json_encode($ubicacion_espe);


            $respuestainstitucional=[
                'dependencia'=>$incidente['dependencia'],
                'nombretrabdep'=>$incidente['nombretrabdep'],
                'cargotrabdep'=>$incidente['cargotrabdep']
                            ];
            
            $zonas_afectadas=$incidente['lugaresafectados'];
            $zonas_afectadasjson=json_encode($zonas_afectadas);
            $respuestainstitucionaljson=json_encode($respuestainstitucional);
            

            $parametros=array(
                $incidente['serie'],
                $incidente['descripcion'],
                $incidente['otro'],
                $incidente['fechaactualizacion'],
                $incidente['horaactualizacion'],
                $incidente['fechaocurrencia'],
                $incidente['horaocurrencia'],
                $incidente['zonasafectdas'],
                $ubicacionespecifica,
                $incidente['infraestructuraafectada'],
                $incidente['afectacionvial'],
                $incidente['medidascontrol'],
                $incidente['tiposeguimiento'],
                $incidente['radioNivelImpacto'],
                $incidente['danoscolaterales'],
                $incidente['status'],
                $incidente['personasafectadas'],
                $incidente['personasevacuadas'],
                $incidente['personasdesaparecidas'],
                $incidente['personaslesionadas'],
                $incidente['personasfallecidas'],
                $respuestainstitucionaljson
            );
        //dd($parametros);

        //latitud
        //longitud
        DB::select('SELECT * from actualizarincidente(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)', $parametros);

        return redirect()->route('incidentes', ['fecha'=>$this->fecha]);
    }


    public function reportepdf(Request $request){

             $incidente = $request;

            ///ubicacion especifica
            $lat=$request['latitud'];
            $long=$request['longitud'];
        
            /*
            //Informacion de  respuesta institucional
            $dependencia=$incidente['dependencia'];
            $nombretrabdep=$incidente['nombretrabdep'];
            $cargotrabdep=$incidente['cargotrabdep'];
                        
            
            //Zonas afectadas
            $zonas_afectadas=json_decode($incidente['zonasafectdas']);
            

            $parametros=array(
                'serie'=>$incidente['serie'],
                'descripcion'=>$incidente['descripcion'],
                'otro'=>$incidente['otro'],
                'f_actualizacion'=>$incidente['fechaactualizacion'],
                'h_actualizacion'=>$incidente['horaactualizacion'],
                'f_ocurrencia'=>$incidente['fechaocurrencia'],
                'h_ocurrencia'=>$incidente['horaocurrencia'],
                'zonas_afectadas'=>$zonas_afectadas,
                'ub_esp_lat'=>$lat,
                'ub_esp_lon'=>$long,
                'infraestructuraafectada'=>$incidente['infraestructuraafectada'],
                'afectacionvial'=>$incidente['afectacionvial'],
                'medidascontrol'=>$incidente['medidascontrol'],
                'tiposeguimiento'=>$incidente['tiposeguimiento'],
                'radionivelimpacto'=>$incidente['radioNivelImpacto'],
                'danioscolaterales'=>$incidente['danoscolaterales'],
                'status'=>$incidente['status'],
                'p_afectadas'=>$incidente['personasafectadas'],
                'p_evacuadas'=>$incidente['personasevacuadas'],
                'p_desaparecidas'=>$incidente['personasdesaparecidas'],
                'p_lesionadas'=>$incidente['personaslesionadas'],
                'p_fallecidas'=>$incidente['personasfallecidas'],
                'dependencia'=>$dependencia,
                'nombretrabdep'=>$nombretrabdep,
                'cargotrabdep'=>$cargotrabdep
            );*/
            $serie=$incidente['serie'];
            $detalleincidente=DB::select('SELECT * FROM detalleSerie(?)',[$serie]);

            //dd($detalleincidente[0]);
            $parametros=array(
                        'serie'=>$serie,
                        'incidente'=>$detalleincidente[0]
                        );

       $html = View('PDF.incidente_reporte_pdf',$parametros)->render();


        $pdf = App::make('dompdf.wrapper');
        $pdf->loadHTML($html);
        $hrs=date('h:i:s');
        $NOMBREPDF="incidente_".$this->fecha.'_'.$hrs;
        return $pdf->download($NOMBREPDF.'.pdf');
        //return $pdf->stream();

       /*
        */

    }


    /*RESPALDO
    public function vistanuevoincidente(Request $request){
        $id_usr= Auth::user()->id;
        $estados=DB::table('estados')->select('nombre', 'prefijo')->get();
        //$subclasificacion=DB::table('subclasificacion')->select('clave', 'denominacion')->get();
        $cnie2=DB::table('incidentes_cnie2')->select('idinc', 'incidente')->get();
        //dd($cnie2);
        $datos=[
            'fechaH'=>$this->fecha,
            'horaAct'=>$this->hora,
            'id_usuario'=>$id_usr,
            'estados'=>$estados,
            'subclasificacion'=>$cnie2
        ];
        return view('incidentes.nuevoincidente', $datos);
    }*/

    public function vistanuevoincidente(Request $request){
        $id_usr= Auth::user()->id;
        //$estados=DB::table('estados')->select('nombre', 'prefijo')->get();
        $estados=DB::table('estados')->select('nombre', 'prefijo')->where('prefijo', 'sin')->get();

        //$subclasificacion=DB::table('subclasificacion')->select('clave', 'denominacion')->get();
        $cnie2=DB::table('incidentes_cnie2')->select('idinc', 'incidente')->get();
        $opciones=[];

        foreach ($cnie2 as $valor) {
            $opciones[] = $valor->idinc.' '.$valor->incidente;
        }

        $edos=[];
        foreach ($estados as $edo) {
            $edos[] = $edo->prefijo.' '.$edo->nombre;
        }
       /*$datos=[
            'fechaH'=>$this->fecha,
            'horaAct'=>$this->hora,
            'id_usuario'=>$id_usr,
            'estados'=>$estados,
            'subclasificacion'=>$subclasificacion
        ];*/


        $datos=[
            'fechaH'=>$this->fecha,
            'horaAct'=>$this->hora,
            'id_usuario'=>$id_usr,
            'estados'=>$estados,
            'subclasificacion'=>$cnie2,
            'dts'=>json_encode($opciones),
            'edos'=>json_encode($edos)
        ];
        return view('incidentes.nuevoincidente', $datos);
    }



    public function vistaregistroincidente(Request $request){
            

        //$estados=DB::table('estados')->select('nombre', 'prefijo')->get();
        $estados=DB::table('estados')->select('nombre', 'prefijo')->where('prefijo', 'sin')->get();

        $subclasificacion=DB::table('subclasificacion')->select('clave', 'denominacion')->get();
        
        $cnie2=DB::table('incidentes_cnie2')->select('idinc', 'incidente')->get();
        $opciones=[];

        foreach ($cnie2 as $valor) {
            $opciones[] = $valor->idinc.' '.$valor->incidente;
        }

        $edos=[];
        foreach ($estados as $edo) {
            $edos[] = $edo->prefijo.' '.$edo->nombre;
        }
         



        // PHP program of preg_split() function 
        // split the phrase by any number of commas  
        // space characters include \r, \t, \n and \f 
          
        //$str = 'string45454djaksjdkas';
        //$chars = preg_split('/^[0-4]{1,}/', $str, -1, PREG_SPLIT_NO_EMPTY);
        //print_r($chars);

        //$valincidente=explode('/[0-9]{1,}/', $request['idincidente']);

        //return  $valincidente;
        $incidente = $request['idincidente'];
        $clave=0;
        $nomincidente='false';
        //$pattern = '~\'+~';
        $pattern = '~[0-4]{1,}+~';
        if (preg_match($pattern,$incidente,$match)) {
            //print($match[0]);
            $num=$match[0];
            $nombreincidente=explode($num, $incidente);
            
            $clave=$match[0];
            $nomincidente=$nombreincidente[1];
        }

        //-----------------------------------------------------
        $estado = $request['idestado'];
        $prefijoedo=0;
        $nomedo='false';
        //$pattern = '~\'+~';
        $pattern = '~[a-z]{3}+~';
        if (preg_match($pattern,$estado,$match)) {
            //print($match[0]);
            $prefijoestado=$match[0];
            $nombreestado=explode($prefijoestado, $estado);
            
            $prefijoedo=$match[0];
            $nomedo=$nombreestado[1];
        }

        $archivo=$prefijoedo.".json";

        $id_usr= Auth::user()->id;

        //dd($clave,$nomincidente);
        //dd($prefijoedo,$nomedo);

        $datos=[
            'fechaH'=>$this->fecha,
            'horaAct'=>$this->hora,
            'id_usuario'=>$id_usr,
            'clave'=>$clave,
            'nomincidente'=>$nomincidente,
            'nomedo'=>$nomedo,
            'archivo'=>$archivo,
            'estados'=>$estados,
            'subclasificacion'=>$subclasificacion,
            'prefijoedo'=>$prefijoedo,
            'subclasificacion'=>$cnie2,
            'dts'=>json_encode($opciones),
            'edos'=>json_encode($edos)
        ];
        
        return view('incidentes.registrarincidente', $datos);

    }

    /*public function vistaregistroincidente(Request $request){

        $datos=[
            'fechaH'=>$this->fecha,
            'horaAct'=>$this->hora,
            'id_usuario'=>$id_usr
        ];
        return view('incidentes.registrarincidente', $datos);
    }*/

    public function postregistroincidente(Request $request){
        $incidente=$request;
        $lat=$request['latitud'];
        $long=$request['longitud'];
        $ubicacion_espe=array('lat' => $lat , 'long' => $long );
        $ubicacionespecifica=json_encode($ubicacion_espe);
        $dependencia=$request['dependencia'];
        $nombretrabdep=$request['nombretrabdep'];
        $cargotrabdep=$request['cargotrabdep'];
        $idinc=intval($incidente['clave']);
        $respuestainstit=array('dependencia' => $dependencia, 'nombretrabdep' => $nombretrabdep, 'cargotrabdep' => $cargotrabdep );
        $respuestainstitucional=json_encode($respuestainstit);
        if ($incidente['status']=1) {
            $status=true;
        }else {
            $status=false;
        }

        //Verificar si los campos estas vacios y asignarles por defecto 0.
        if ($incidente['personasafectadas']=='' ){

            $incidente['personasafectadas']= '0';
        }
        if ($incidente['personasevacuadas']=='' ){

            $incidente['personasevacuadas']= '0';
        }
        if ($incidente['personasdesaparecidas']=='' ){

            $incidente['personasdesaparecidas']= '0';
        }
        if ($incidente['personaslesionadas']=='' ){

            $incidente['personaslesionadas']= '0';
        }
        if ($incidente['personasfallecidas']=='' ){

            $incidente['personasfallecidas']= '0';
        }

  //dd($incidente['lugaresafectados']);
        
        $parametros=array(
            $incidente['descripcion'],
            $incidente['lugaresafectados'],
            $ubicacionespecifica,
            $incidente['otro'],
            $incidente['fecharegistro'],
            $incidente['horaregistro'],
            $incidente['fechaocurrencia'],
            $incidente['horaocurrencia'],
            $incidente['medidascontrol'],
            $incidente['personasafectadas'],
            $incidente['personasevacuadas'],
            $incidente['personasdesaparecidas'],
            $incidente['personaslesionadas'],
            $incidente['personasfallecidas'],
            $incidente['danoscolaterales'],
            $incidente['infraestructuraafectada'],
            $incidente['afectacionvial'],
            $respuestainstitucional,
            $idinc,
            $incidente['prefijoestado'],
            $incidente['radioNivelImpacto'],
            $incidente['tiposeguimiento'],
            $status,
            $incidente['id_usuario']
        );

        //dd($incidente['clave']);
        
        $tasks=DB::select('SELECT * from insertincidentes(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)',$parametros);
   
       return redirect()->route('incidentes', ['fecha'=>$this->fecha]);
        

    }

    public function obtenerFechaTexto($fecha){
        $fechaHoy=$this->invertirfecha($fecha);
        $fechaHoy=explode("-",$fechaHoy);
        $meses=array(
            "de Enero"=>"01",
            "de Febrero"=>"02",
            "de Marzo"=>"03",
            "de Abril"=>"04",
            "de Mayo"=> "05",
            "de Junio"=>"06",
            "de Julio"=>"07",
            "de Agosto"=>"08",
            "de Septiembre"=>"09",
            "de Octubre"=>"10",
            "de Noviembre"=>"11",
            "de Diciembre"=>"12",
            );
        foreach ($meses as $key => $value) {
            if ($value == $fechaHoy[1]) {
                $fechaTexto=$fechaHoy[0]." ".$key." ".$fechaHoy[2];
           }
        }
        return $fechaTexto;
    }

    public function invertirfecha($fecha){
        $res=$fecha;
        if($fecha!=''){
           $arrfecha=explode("-",$fecha);
           $f_ingles=array_reverse($arrfecha);
           $res=$fechaing=join("-",$f_ingles);
        }
        return $res;
    }



public function listareportepdf(Request $request){

        $parametros = array(
            'lista_incidentes'=> json_decode($request['lista_incidentes'])
            ); 

        $html = View('PDF.lista_incidentes_reporte_pdf',$parametros)->render();
        $pdf = App::make('dompdf.wrapper');
        $pdf->loadHTML($html);
        $hrs=date('h:i:s');
        $NOMBREPDF="lista_incidentes_".$this->fecha.'_'.$hrs;
        return $pdf->download($NOMBREPDF.'.pdf');
        //return $pdf->stream();

    }
}